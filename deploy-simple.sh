#!/bin/bash

# Script de d√©ploiement simplifi√© pour HatCast
# Utilise GitHub Actions pour le build et d√©ploiement s√©curis√©
# Usage: ./deploy-simple.sh

echo "üöÄ D√©ploiement simplifi√© HatCast (GitHub Actions)"
echo "=================================================="
echo ""

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_step() {
    echo -e "${BLUE}üìã $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# 1. V√©rifier le statut git
print_step "V√©rification du statut Git..."
if [ -z "$(git status --porcelain)" ]; then
    print_success "Aucun changement √† committer"
else
    print_warning "Changements d√©tect√©s :"
    git status --short
    echo ""
fi

# 2. Demander confirmation
echo "üîÑ Ce script va :"
echo "   1. Ajouter tous les changements"
echo "   2. Cr√©er un commit"
echo "   3. Pousser sur GitHub"
echo "   4. D√©clencher le d√©ploiement automatique via GitHub Actions"
echo ""
read -p "Continuer ? (y/N): " -n 1 -r
echo ""
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    print_warning "D√©ploiement annul√©"
    exit 0
fi

# 3. Ajouter les changements
print_step "Ajout des changements..."
git add .
print_success "Changements ajout√©s"

# 4. Demander le message de commit
echo ""
read -p "Message de commit (d√©faut: 'Deploy to production'): " commit_message
if [ -z "$commit_message" ]; then
    commit_message="Deploy to production"
fi

# 5. Cr√©er le commit
print_step "Cr√©ation du commit..."
git commit -m "$commit_message"
if [ $? -ne 0 ]; then
    print_error "√âchec de la cr√©ation du commit"
    exit 1
fi
print_success "Commit cr√©√© : $commit_message"

# 6. Pousser sur GitHub
print_step "Push sur GitHub..."
git push origin main
if [ $? -ne 0 ]; then
    print_error "√âchec du push"
    exit 1
fi
print_success "Code pouss√© sur GitHub"

# 7. Instructions de suivi
echo ""
echo "üéâ D√©ploiement d√©clench√© avec succ√®s !"
echo "======================================"
echo ""
echo "üìã Prochaines √©tapes :"
echo "   1. GitHub Actions se d√©clenche automatiquement"
echo "   2. Le build se fait sur GitHub (s√©curis√© avec tes secrets)"
echo "   3. Le d√©ploiement se fait sur GitHub Pages"
echo "   4. Dur√©e estim√©e : 2-5 minutes"
echo ""
echo "üîç Suivre le d√©ploiement :"
echo "   https://github.com/plamarque/hatcast/actions"
echo ""
echo "üåê V√©rifier le site :"
echo "   https://selections.la-malice.fr"
echo ""
echo "üí° Rappel : Tes cl√©s Firebase sont maintenant s√©curis√©es !"
echo "   Elles ne sont plus expos√©es dans ton code local."
