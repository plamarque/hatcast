rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Collection userNavigation - Sécuriser l'accès aux données de navigation
    match /userNavigation/{docId} {
      // Lecture : l'utilisateur peut lire ses propres données de navigation
      allow read: if request.auth != null && 
        (docId == request.auth.uid || 
         docId == 'email_' + request.auth.token.email);
      
      // Écriture : l'utilisateur peut écrire ses propres données de navigation
      allow write: if request.auth != null && 
        (docId == request.auth.uid || 
         docId == 'email_' + request.auth.token.email);
      
      // Suppression : l'utilisateur peut supprimer ses propres données
      allow delete: if request.auth != null && 
        (docId == request.auth.uid || 
         docId == 'email_' + request.auth.token.email);
    }
    
    // Collection des saisons - Lecture et écriture publiques
    match /seasons/{seasonId} {
      allow read, write: if true;
    }
    
    // Collection des événements - Lecture et écriture publiques
    match /seasons/{seasonId}/events/{eventId} {
      allow read, write: if true;
    }
    
    // Collection des joueurs - Lecture et écriture publiques
    match /seasons/{seasonId}/players/{playerId} {
      allow read, write: if true;
    }
    
    // Collection des disponibilités - Lecture et écriture publiques (nouvelle structure)
    match /seasons/{seasonId}/players/{playerId}/availability/{eventId} {
      allow read, write: if true;
    }
    
    // Collection des disponibilités - Lecture et écriture publiques (ancienne structure)
    match /seasons/{seasonId}/availability/{playerName} {
      allow read, write: if true;
    }
    
    // Collection des disponibilités globale - Lecture et écriture publiques
    match /availability/{playerName} {
      allow read, write: if true;
    }
    
    // Collection des sélections - Lecture et écriture publiques (ancienne structure)
    match /seasons/{seasonId}/selections/{eventId} {
      allow read, write: if true;
    }
    
    // Collection des casts - Lecture et écriture publiques (nouvelle structure)
    match /seasons/{seasonId}/casts/{eventId} {
      allow read, write: if true;
    }
    
    // Collection de protection des joueurs - Lecture et écriture publiques
    match /seasons/{seasonId}/playerProtection/{playerId} {
      allow read, write: if true;
    }
    
    // Collection de protection des joueurs globale - Lecture et écriture publiques
    match /playerProtection/{playerId} {
      allow read, write: if true;
    }
    
    // Collection des préférences utilisateur
    match /userPreferences/{docId} {
      allow read, write: if request.auth != null && 
        (docId == request.auth.uid || 
         docId == 'email_' + request.auth.token.email);
    }
    
    // Collection des liens magiques - Lecture et écriture publiques
    match /magicLinks/{docId} {
      allow read, write: if true;
    }
    
    // Collection des liens magiques pour comptes - Lecture et écriture publiques
    match /accountMagicLinks/{docId} {
      allow read, write: if true;
    }
    
    // Collection des emails - Lecture et écriture publiques
    match /mail/{docId} {
      allow read, write: if true;
    }
    
    // Collection des tokens push utilisateur
    match /userPushTokens/{docId} {
      allow read, write: if true;
    }
    
    // Collection de la queue des notifications push
    match /pushQueue/{docId} {
      allow read, write: if true;
    }
    
    // Collection des associations joueur-email
    match /playerAssociations/{docId} {
      allow read, write: if true;
    }
    
    // Collection des rappels - Lecture et écriture publiques
    match /reminderQueue/{docId} {
      allow read, write: if true;
    }
    
    // Autres collections existantes (ajouter selon vos besoins)
    // match /users/{userId} {
    //   allow read, write: if request.auth != null && request.auth.uid == userId;
    // }
    
    // Par défaut, refuser l'accès
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Collection des logs d'audit
    match /auditLogs/{logId} {
      // Lecture : admins seulement
      allow read: if request.auth != null && 
        request.auth.token.email.matches('.*@hatcast\\.app');
      
      // Écriture : tout le monde (pour le logging client)
      allow write: if true;
      
      // Suppression : jamais
      allow delete: if false;
    }
  }
}
