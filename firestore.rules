rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Collection seasons : lecture publique, écriture pour utilisateurs connectés
    match /seasons/{seasonId} {
      allow read: if true;  // Lecture publique des saisons
      allow write: if request.auth != null;  // Écriture pour utilisateurs connectés
      
      // Sous-collections des saisons
      match /{subcollection}/{document=**} {
        allow read: if true;  // Lecture publique
        allow write: if request.auth != null;  // Écriture pour utilisateurs connectés
      }
    }
    
    // Collection userPreferences : lecture/écriture pour l'utilisateur propriétaire uniquement
    match /userPreferences/{docId} {
      allow read, write: if request.auth != null;
    }
    
    // Collection auditLogs : lecture pour admins, écriture pour utilisateurs connectés ou anonymes
    match /auditLogs/{logId} {
      allow read: if request.auth != null;  // Lecture pour utilisateurs connectés
      allow write: if true;  // Écriture autorisée pour tous (audit)
    }
    
    // Collection mail : écriture pour utilisateurs connectés uniquement
    match /mail/{mailId} {
      allow read: if false;  // Pas de lecture directe (géré par Cloud Functions)
      allow write: if request.auth != null;  // Écriture pour utilisateurs connectés
    }
    
    // Collection reminderQueue : écriture pour utilisateurs connectés uniquement
    match /reminderQueue/{reminderId} {
      allow read: if false;  // Pas de lecture directe (géré par Cloud Functions)
      allow write: if request.auth != null;  // Écriture pour utilisateurs connectés
    }
    
    // Collection pushQueue : écriture pour utilisateurs connectés uniquement
    match /pushQueue/{pushId} {
      allow read: if false;  // Pas de lecture directe (géré par Cloud Functions)
      allow write: if request.auth != null;  // Écriture pour utilisateurs connectés
    }
    
    // Collection userPushTokens : lecture/écriture pour l'utilisateur propriétaire uniquement
    match /userPushTokens/{userEmail} {
      allow read, write: if request.auth != null && request.auth.token.email == userEmail;
    }
    
    // Collection userNavigation : lecture/écriture pour l'utilisateur propriétaire uniquement
    match /userNavigation/{userEmail} {
      allow read, write: if request.auth != null && request.auth.token.email == userEmail;
    }
    
    // Collection magicLinks : lecture/écriture pour utilisateurs connectés
    match /magicLinks/{linkId} {
      allow read, write: if request.auth != null;
    }
    
    // Collection accountMagicLinks : lecture/écriture pour utilisateurs connectés
    match /accountMagicLinks/{linkId} {
      allow read, write: if request.auth != null;
    }
    
    // Collection notificationActivations : lecture/écriture pour utilisateurs connectés
    match /notificationActivations/{activationId} {
      allow read, write: if request.auth != null;
    }
    
    // Collection playerAssociations : lecture/écriture pour utilisateurs connectés
    match /playerAssociations/{associationId} {
      allow read, write: if request.auth != null;
    }
    
    // Collection playerProtection : lecture/écriture pour utilisateurs connectés
    match /playerProtection/{protectionId} {
      allow read, write: if request.auth != null;
    }
    
    // Collection invitations : lecture/écriture pour utilisateurs connectés
    match /invitations/{invitationId} {
      allow read, write: if request.auth != null;
    }
    
    // Par défaut : tout bloqué
    match /{document=**} {
      allow read, write: if false;
    }
  }
}